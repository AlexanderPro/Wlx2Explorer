<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        36dM+TcRZl/hRmSf3QAAAABJRU5ErkJggg==
</value>
  </data>
</root>