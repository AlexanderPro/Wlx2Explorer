<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAuIAAALiAUm6+AQAAAAHdElNRQfdCgsMMiVQq0OjAAANuElEQVRoQ9WaCVRU1x3G
        bdMk3ZKImqbplqZLmrapSZp4Yow2bXrq0jZtjjEuVRN3q8UFFUGWGfYAwyqrEhdc0KCgEBUUIiiDAYVh
        GZaRZVhmBoZhFmYGZoGBr//7GJYRtBhJ2t5zfkczJ/i+373fve+90SkTGWZtoUInT49UNx2dV1Ky6WH7
        x/8/w9R5oc+iy4eyMQX69ouWHtUlEX0Wb1KdehuquG/b/7f/3aFvPdhv0WXA1lMEaUUsWirD0NkQg+72
        07Bortis2suSXt2lE2bVmVVGZcJ37D/2vzO6mvb3G9uTAOt1DFjLIKtNhrgwAK3icE7E0JqAHsUBmFWn
        0Ku7Aqv2ityqzcqwdKY5WzqP/Nz+x/z3hk4a2W9oiwUsWSRxDeitgFZ+ETdyvFB1Y6yIqY1k2g/CojpJ
        MpdJKkfbq83+1KpJ9+5pS3oFSH3I/kd/OUMnjeg3KKIBc6aDhLmrCMJsPopzeagtDoK8OgLqxrEiQ1g6
        jpNQNlslk1WXXWxVZ4SZlUffgiziG/ZLfTFjROD8KIl8kiiHzVwDUYEABZf2QXTNF/WlwWirjYRGGntX
        kRGhZBLKYivE9lF1ryYjydz+0e/tl5284SgwJHHJLlGBgb5m3Mz1w/WL+3DzUx5Xq6ZyAZS3o6BtioNR
        lnhPkWGUR7k91C1LzgHem7yajRUYvRIFQJ8EsppkXM3cC2GWBydRWejPrYasKhyq+v3Qt8ajW57ISdxb
        5AB6tVfQVuLhar/8g4/xBTLsEjRZvSIYlDmcAKtSca43SvN9uJOqriSY2+TK29Hcaty9VvTfbYlEAswd
        J6As98+3X/7Bx/gCdgluFYpg0uQNCxTR6VSSx0eF0I/b3I1lodxKjJWgwPbgJgpuaouHSRFHVTqGjrKA
        6/bLP/i4twDbC0KYVFl3FWgQhXA3v3ZJFHfc6lvjqOcsLAs9EtykiCViSCoZyjK/L0nAfJEk8mBsz0Du
        uXsLtNVGQFUXBV1zDG3sWPTIWeiR4Cb5fvosGqb2IyTg+yUJmD7BgDkXhrZ07N7rj52uPFw8O1ogEA20
        mVsqQqGoCUNHXQR0TdEwtrKwLPRI8B55FHpkUSRwaHIFtI3hdxEgTBkYMF2GUXEG4WHh4PF88C/nPXh/
        /V4cO8RHbRE7jYLQXBEMRXUoOm6HkUAkjC1RVCMWmqDQPbJIIoLD1JaEdhF/8gQ0dxMwpWOg5xwJZMGg
        SEVCQgIEgjB4eflgm7MLVq5ch6WrdiFE4E81CiKBEHRIBNBKw2FoiUR3Kws9FDwcPa1h9FkYetoOQn6L
        N3kC6vEEuPBnMdCdRr9egEGWgri4eMTGxiEkRAAPDx7WbdyNH7yRhN//3QcrVu+Cq0cAxDdCoG0UwNAc
        TmFZaPYrCy4gQtHdEkonVCJab3pNnkDnnQImmnUufCpxBv3dmXSynKTgoZxAdHQMggJDsN2FhydeTcET
        s1Lx3TdSsGH9Vqxc44ZNHh+jVEgbuYWFJih0d0uInWCqVTyaiyZToCFslMA5EmCzTuGNp9Fv/Jg4D31L
        Mjw9vSEIDcN+EggPj4K7Z/CwwLTXznICq9a4Ysa8HDi98Sne3nweudl0h6bQ3c0fwsgRRAKxaPzMcxIF
        6kcJcOHP0MyfJoEUCn8K/YY02phHqfc74e3tg9DQcERGRIPvF35PAae5V/HM/Bw0iwVccGNzIIxNAbQf
        YtBww/0LEBju/ceD4Q0niJPEGRI4jA/eX4edO3aDz/OlOoXB1z9qRGD2+AJOc/OwxfM0F9zY5E/4Ua2i
        UV+wd/IEVHaB4d5zs07h9ceI47DpU6GTJuHdxcuxds1GuLjsAZ/vB2/+yApMJ4HNm7aNKzD9d3nQ1PnD
        IPUlfEggEpJrrpMoUEcCdJPhek/V4Wadhe86ChvHaWgaP8LvFmzBkiUrsX79ZuxyccUetwAHgZ07944r
        wOi87QdDI5/g0Z4IR23e7skT6KgT9BvovB7uveE4hU+GTXeYOEKk0DNOEh6bGYOnZ4Vh9nw3fLDGGVud
        92HqLLvA62lwd/PCmo37xheQ+FB4b8KL9kIYqj7dVUCX/spgggccytshgwJDvdcnkwAL/hFs2kPECWga
        DsLp5Vg89mICHn/pIGbMSsKshaFY8kEg3lwSj6fnpcLTg49NW/njC9TyoG/wJDxIIBTlOS5CujT7Doq9
        2HyVYDKfT0hZG0wCEaOqw8Kz4Ac5+rTJ0DUmIPNiHrZ6nsczbx7B4789jMdfOQYnWoHfLDyEpevCsc/d
        G//c5jeugKrWC/r6fYQ7CQRDlL2dCbB35a8TjxJM5msEE7o/kfbaD/v1dMdkG5brPRc+CTZNIvo4DkNb
        HwuhUIji4mIU3yyBIDEfs99LG94DU19Lx7N/PIO3liaNL1DjQeHd0FW3F4amIJRc2lZIl36MYF+cfYu4
        U4atysRGGycQxlWH6z0X/gD61PHo6yTUB6CuEUB4+jQnIBKJIBaLIZFIcD67EstdrmLGnHOYOjsTU1+/
        CKc5V8YIdFS7U3hXYg+dRIEovuD8GV3aiZhKPEEMyTCYzMTfmRU1gSQgGNV7qo06gcLHok8Vg15VLFTV
        QRAGB6N4+3aI4uIgrqzkBKRSKWQyGSprWuEVJcJPF1L4cQX2ouv2bmIXCQTgRsaWIro0+5ZvBjGdmEYM
        yXyTmPgKKKoCOIHh3rPaqOMo/H70dkShVxkJZaXfcIVEqakQ79kDSUAApLQSTECpVEKj0aBT04XkjBa8
        ufamo0DVHgrvAp1kJ/SNfihI31xMl/4e8V3iKYLJPEmwVWFVmvg+UFT5kUDoSO+56sSQAIXviEBvuwDy
        Uq8RgaEK0e+l/v6QeXtDeeMGJ2AwGGCxWGCz2ZB4RjYiIN5F4XcQ2+kk8oEo10vh5jyHfUf0A+L7BJN5
        mmCrwTbzxId8SGC496w60RQ+kmY/jARCIMndA6GzM4pjYiAqLR3eA1yFmpuhPHwYGh4PhvR0WMxmTuDC
        ddUoAZr92m12nKG7TRu6Kc54Mm7ZLorwDPEj4ocEW5FHiImvgKzShwRCRvWeVYeFD6fwoTDLA5H7yaHB
        FTh5EiIXF4hp5iW0EkN7YKhChsJCWKhatpQUR4FKmv3af0Fbw9iKnvbT9GJzDIWZO25ThJ8RPyGeJX5M
        sDoxiYmN1gp+v54eebneU3UGe8/CC2BtC4ZZ5o+cC8cdK1RQAAmfD6mnJ2T0+bDAUIVoFUYLKCu2ccG1
        NVugrf4neg3l6O9V4+aFFQaK8DzxHMG+6WawFbkPgXJ+fxfdXAZ7z6pDvVey8CGwKoJgbvXFld3rIYyO
        HnOMSuvrITt4EEovL2jOnoVBrx/eA44CNPMUXFu9mdgEq6GMEyjOXM4EXiB+TfyS+AXBqjTxfdBSziOB
        D8f03tr2IQkEwNTig8uf0AocOTJ4jPr4QHzzpsMxyq1AXh4Mfn6wJCbSA2CXo0D5FmgouKZqI7FhWOCz
        88uYwEvEi8RMgkmwI3Xi9wFZBRMIcug9q45VEQir3A89LTxkZx4bqdDVqxDTjEvc3SHNz3fcA6xCcjls
        aWkOAu1lm7ngmqr10IjXwaoXcQKF55YaKcIrdl4mWJ3Y3XjiQy72tnU1Bzj0nlXHKveHReaDnmZvZEX5
        jj1Gq6shpZuazMMDSro33HmMOgrQ7FNwjXgt1OI1JFBKAp0Qpi1hArPtMAl2rN7fXzQqxD42HSdgrw4X
        PoDC+8LSykNPkycu/WQGhM89h2I680VFRY7HKFuBnBxoaFMb4uNhIZExAqINXHB15QfE+4MCVhI4+243
        RZhHvEG8SjxOTPwuzMaty9tDDLSJB6sz2HuLjLrcyoelxQvd0n24+Ox00OMj6PYJ0dSpEG/YAAnVZ8wx
        2tgIS0QEbMnJDgJtpeu44OrK1VBXrIJJW4I+swrXzyxmAn8gmATr//3VZ2gUZjqv0NT52oZ6z6pjafWG
        udkT3Q1uuDBagBATkocegnTRIsio72OO0TtWoK2UZp+CqytWorPiHxDfuoZbRTUk8A4TmE+8SbCb2P3d
        hUcPYcbGX7SI3HRD1bG0eJLAPhJwRfiyv6lznvvVgIMAISVkhPKFF6DZvx8GlWp8gZL3ueCd5SuI5cjO
        yEbqqSJcT/0bE1hIsD3AHuIebOTnr/l6zbXtFaw6LLy5yQ3d9bvxzp+eZ7f8BdvnvJNy5bU/WKoeeQR1
        FLyJkBMdhJYwTpsGi6srbE1NDgKKW6u44J3ly9BZthQfJZxDUOBlXPv4bSawgGB344nfvP7TKM3aeKi7
        cS/MUlcY61yw4q8zN9LH7KxmN51fbpq7eHnO/OWtLd95iguvIfRED2El+qledWt2jxKg2afgnWXvQVW2
        BAWfBOBw3CHknvgzzcGUOQSb/c/3Snm38Vnm2rVq8Q6bWuyM1YtffIs+Yk+L7NGXPfayp0anBS8s+H7e
        sh05nTNftZkpeC9hIwYI5dxFFH7wkVp+azkXXCV6l1iMq6cWqcou/TnvQNA8NjFf3D9nKEhbO1OYvrp4
        /otPsdc+dkKwZR5i9HvsQznr/HnKP/7dMPDoo4Bd4KmXfTFtTgb+8qfn1we7v3TkeNTsW3G+r+V88+Ep
        v6WfYW9e7Ocnd+bvY7AL38mUrK3RcxsWb2qsW7i698lZcZj+ejqe/LUvm2X22siecxgPvmG/8PFKycNO
        8/KWO83NL5yy6NLnON+nTPk3EWZf4UZkn90AAAAASUVORK5CYII=
</value>
  </data>
</root>